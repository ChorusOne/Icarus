// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package baklava

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// StableTokenABI is the input ABI used to generate the binding from.
const StableTokenABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"valueToUnits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"updatePeriod\",\"type\":\"uint256\"}],\"name\":\"setInflationParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"blsKey\",\"type\":\"bytes\"},{\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"debitGasFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"feeRecipient\",\"type\":\"address\"},{\"name\":\"gatewayFeeRecipient\",\"type\":\"address\"},{\"name\":\"communityFund\",\"type\":\"address\"},{\"name\":\"refund\",\"type\":\"uint256\"},{\"name\":\"tipTxFee\",\"type\":\"uint256\"},{\"name\":\"gatewayFee\",\"type\":\"uint256\"},{\"name\":\"baseTxFee\",\"type\":\"uint256\"}],\"name\":\"creditGasFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"registryAddress\",\"type\":\"address\"},{\"name\":\"inflationRate\",\"type\":\"uint256\"},{\"name\":\"inflationFactorUpdatePeriod\",\"type\":\"uint256\"},{\"name\":\"initialBalanceAddresses\",\"type\":\"address[]\"},{\"name\":\"initialBalanceValues\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInflationParameters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"units\",\"type\":\"uint256\"}],\"name\":\"unitsToValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"transferWithComment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"name\":\"exponent\",\"type\":\"uint256\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"factor\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"name\":\"InflationFactorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"updatePeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"name\":\"InflationParametersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"TransferComment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// StableTokenBin is the compiled bytecode used for deploying new contracts.
var StableTokenBin = "0x608060405260006200001964010000000062000069810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200006d565b3390565b614a79806200007d6000396000f3fe608060405234801561001057600080fd5b506004361061026d5760003560e060020a900480637385e5da11610155578063a67f8747116100c7578063df4da4611161008b578063df4da46114610b8c578063e1d6aceb14610b94578063e50e652d14610c19578063ec68307214610c36578063f2fde38b14610c8a578063fae8db0a14610cb05761026d565b8063a67f874714610ac1578063a9059cbb14610aef578063a91ee0dc14610b1b578063af31f58714610b41578063dd62ed3e14610b5e5761026d565b80638da5cb5b116101195780638da5cb5b14610a585780638f32d59b14610a6057806395d89b4114610a685780639a7b3be714610a705780639b2b592f14610a78578063a457c2d714610a955761026d565b80637385e5da146108115780637b1039991461081957806382b935161461082157806387ee8a0f146109aa5780638a883626146109b25761026d565b806339509351116101ee57806358cf9672116101b257806358cf9672146106955780635d180adb146106c157806367960e91146106e45780636a30b2531461078a57806370a08231146107e3578063715018a6146108095761026d565b8063395093511461055d5780633b1eb4bf1461058957806340c10f19146105a657806342966c68146105d25780634b2c2f44146105ef5761026d565b806318160ddd1161023557806318160ddd1461039f578063222836ad146103a757806323b872dd146103cc57806323f0ab6514610402578063313ce5671461053f5761026d565b806306fdde0314610272578063095ea7b3146102ef578063123633ea1461032f57806312c6c09914610368578063158ef93e14610397575b600080fd5b61027a610ccd565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b457818101518382015260200161029c565b50505050905090810190601f1680156102e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61031b6004803603604081101561030557600080fd5b50600160a060020a038135169060200135610d61565b604080519115158252519081900360200190f35b61034c6004803603602081101561034557600080fd5b5035610e85565b60408051600160a060020a039092168252519081900360200190f35b6103856004803603602081101561037e57600080fd5b5035610f99565b60408051918252519081900360200190f35b61031b610fbf565b610385610fe0565b6103ca600480360360408110156103bd57600080fd5b5080359060200135610ff2565b005b61031b600480360360608110156103e257600080fd5b50600160a060020a0381358116916020810135909116906040013561119d565b61031b6004803603606081101561041857600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561044357600080fd5b82018360208201111561045557600080fd5b8035906020019184600183028401116401000000008311171561047757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156104ca57600080fd5b8201836020820111156104dc57600080fd5b803590602001918460018302840111640100000000831117156104fe57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506114f8945050505050565b610547611680565b6040805160ff9092168252519081900360200190f35b61031b6004803603604081101561057357600080fd5b50600160a060020a038135169060200135611689565b6103856004803603602081101561059f57600080fd5b50356117e5565b61031b600480360360408110156105bc57600080fd5b50600160a060020a0381351690602001356117fe565b61031b600480360360208110156105e857600080fd5b5035611a81565b6103856004803603602081101561060557600080fd5b81019060208101813564010000000081111561062057600080fd5b82018360208201111561063257600080fd5b8035906020019184600183028401116401000000008311171561065457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611d25945050505050565b6103ca600480360360408110156106ab57600080fd5b50600160a060020a038135169060200135611e82565b61034c600480360360408110156106d757600080fd5b5080359060200135612091565b610385600480360360208110156106fa57600080fd5b81019060208101813564010000000081111561071557600080fd5b82018360208201111561072757600080fd5b8035906020019184600183028401116401000000008311171561074957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061219e945050505050565b6103ca60048036036101008110156107a157600080fd5b50600160a060020a0381358116916020810135821691604082013581169160608101359091169060808101359060a08101359060c08101359060e001356122f0565b610385600480360360208110156107f957600080fd5b5035600160a060020a03166124d2565b6103ca6124f4565b610385612597565b61034c6125a2565b6103ca600480360361010081101561083857600080fd5b81019060208101813564010000000081111561085357600080fd5b82018360208201111561086557600080fd5b8035906020019184600183028401116401000000008311171561088757600080fd5b9193909290916020810190356401000000008111156108a557600080fd5b8201836020820111156108b757600080fd5b803590602001918460018302840111640100000000831117156108d957600080fd5b9193909260ff83351692600160a060020a036020820135169260408201359260608301359260a08101906080013564010000000081111561091957600080fd5b82018360208201111561092b57600080fd5b8035906020019184602083028401116401000000008311171561094d57600080fd5b91939092909160208101903564010000000081111561096b57600080fd5b82018360208201111561097d57600080fd5b8035906020019184602083028401116401000000008311171561099f57600080fd5b5090925090506125b1565b610385612801565b610385600480360360208110156109c857600080fd5b8101906020810181356401000000008111156109e357600080fd5b8201836020820111156109f557600080fd5b80359060200191846001830284011164010000000083111715610a1757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061291e945050505050565b61034c612a70565b61031b612a7f565b61027a612aa3565b610385612b04565b61038560048036036020811015610a8e57600080fd5b5035612b0f565b61031b60048036036040811015610aab57600080fd5b50600160a060020a038135169060200135612c1a565b610ac9612cc0565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61031b60048036036040811015610b0557600080fd5b50600160a060020a038135169060200135612d0f565b6103ca60048036036020811015610b3157600080fd5b5035600160a060020a0316612e55565b61038560048036036020811015610b5757600080fd5b5035612f58565b61038560048036036040811015610b7457600080fd5b50600160a060020a0381358116916020013516612f8e565b610385612fb9565b61031b60048036036060811015610baa57600080fd5b600160a060020a0382351691602081013591810190606081016040820135640100000000811115610bda57600080fd5b820183602082011115610bec57600080fd5b80359060200191846001830284011164010000000083111715610c0e57600080fd5b5090925090506130a9565b61038560048036036020811015610c2f57600080fd5b503561325e565b610c71600480360360c0811015610c4c57600080fd5b5080359060208101359060408101359060608101359060808101359060a0013561329c565b6040805192835260208301919091528051918290030190f35b6103ca60048036036020811015610ca057600080fd5b5035600160a060020a0316613463565b61038560048036036020811015610cc657600080fd5b50356134bb565b60028054604080516020601f6000196101006001871615020190941685900493840181900481028201810190925282815260609390929091830182828015610d565780601f10610d2b57610100808354040283529160200191610d56565b820191906000526020600020905b815481529060010190602001808311610d3957829003601f168201915b505050505090505b90565b6000610d6b614560565b6000610d756135c6565b600b5491935091508114610dd25781516009819055600b829055604080516020810190915290815260008051602061460b83398151915290610db690613719565b600b546040805192835260208301919091528051918290030190a15b600160a060020a0385161515610e1c5760405160e560020a62461bcd02815260040180806020018281038252602a81526020018061486c602a913960400191505060405180910390fd5b336000818152600760209081526040808320600160a060020a038a1680855290835292819020889055805188815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3506001949350505050565b60408051602080820184905243828401528251808303840181526060928301938490528051600094859360fa939282918401908083835b60208310610edb5780518252601f199092019160209182019101610ebc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f3b576040519150601f19603f3d011682016040523d82523d6000602084013e610f40565b606091505b5092509050801515610f865760405160e560020a62461bcd02815260040180806020018281038252603d8152602001806147c4603d913960400191505060405180910390fd5b610f9182600061371d565b949350505050565b6000610fa3614560565b610fab6135c6565b509050610fb88184613729565b9392505050565b60005474010000000000000000000000000000000000000000900460ff1681565b6000610fed600654612f58565b905090565b610ffa612a7f565b151561103e576040805160e560020a62461bcd02815260206004820181905260248201526000805160206148b7833981519152604482015290519081900360640190fd5b611046614560565b60006110506135c6565b600b54919350915081146110ad5781516009819055600b829055604080516020810190915290815260008051602061460b8339815191529061109190613719565b600b546040805192835260208301919091528051918290030190a15b8315156110ee5760405160e560020a62461bcd02815260040180806020018281038252602781526020018061470d6027913960400191505060405180910390fd5b60008311611146576040805160e560020a62461bcd02815260206004820152601860248201527f757064617465506572696f64206d757374206265203e20300000000000000000604482015290519081900360640190fd5b61114f84613747565b51600855600a8390556040805185815260208101859052428183015290517fa0035d6667ffb7d387c86c7228141c4a877e8ed831b267ac928a2f5b651c155d9181900360600190a150505050565b60006111a7614560565b60006111b16135c6565b600b549193509150811461120e5781516009819055600b829055604080516020810190915290815260008051602061460b833981519152906111f290613719565b600b546040805192835260208301919091528051918290030190a15b611216613761565b600160a060020a031663e5839836306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d602081101561129857600080fd5b5051156112d95760405160e560020a62461bcd02815260040180806020018281038252602281526020018061476c6022913960400191505060405180910390fd5b604080516020810190915260095481526000906112f69086613729565b9050600160a060020a03861615156113425760405160e560020a62461bcd02815260040180806020018281038252602a815260200180614a01602a913960400191505060405180910390fd5b600160a060020a03871660009081526005602052604090205481111561139c5760405160e560020a62461bcd0281526004018080602001828103825260298152602001806148d76029913960400191505060405180910390fd5b600160a060020a03871660009081526007602090815260408083203384529091529020548511156114015760405160e560020a62461bcd0281526004018080602001828103825260388152602001806149006038913960400191505060405180910390fd5b600160a060020a03861660009081526005602052604090205461142a908263ffffffff61383616565b600160a060020a03808816600090815260056020526040808220939093559089168152205461145f908263ffffffff61389316565b600160a060020a038816600090815260056020908152604080832093909355600781528282203383529052205461149c908663ffffffff61389316565b600160a060020a0380891660008181526007602090815260408083203384528252918290209490945580518981529051928a16939192600080516020614984833981519152929181900390910190a35060019695505050505050565b60008060fb600160a060020a03168585856040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183805190602001908083835b602083106115625780518252601f199092019160209182019101611543565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106115aa5780518252601f19909201916020918201910161158b565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b6020831061160f5780518252601f1990920191602091820191016115f0565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461166f576040519150601f19603f3d011682016040523d82523d6000602084013e611674565b606091505b50909695505050505050565b60045460ff1690565b6000611693614560565b600061169d6135c6565b600b54919350915081146116fa5781516009819055600b829055604080516020810190915290815260008051602061460b833981519152906116de90613719565b600b546040805192835260208301919091528051918290030190a15b600160a060020a03851615156117445760405160e560020a62461bcd02815260040180806020018281038252602a81526020018061486c602a913960400191505060405180910390fd5b336000908152600760209081526040808320600160a060020a038916845290915281205490611779828763ffffffff61383616565b336000818152600760209081526040808320600160a060020a038d16808552908352928190208590558051858152905194955091937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019695505050505050565b60006117f8826117f3612fb9565b6138d5565b92915050565b6000611808614560565b60006118126135c6565b600b549193509150811461186f5781516009819055600b829055604080516020810190915290815260008051602061460b8339815191529061185390613719565b600b546040805192835260208301919091528051918290030190a15b600154604080517f45786368616e676500000000000000000000000000000000000000000000000060208083019190915282518083036008018152602883018085528151918301919091207fdd92723300000000000000000000000000000000000000000000000000000000909152602c8301529151600160a060020a039093169263dd92723392604c80840193919291829003018186803b15801561191457600080fd5b505afa158015611928573d6000803e3d6000fd5b505050506040513d602081101561193e57600080fd5b5051600160a060020a0316331480611a2e5750600154604080517f56616c696461746f7273000000000000000000000000000000000000000000006020808301919091528251808303600a018152602a83018085528151918301919091207fdd92723300000000000000000000000000000000000000000000000000000000909152602e8301529151600160a060020a039093169263dd92723392604e80840193919291829003018186803b1580156119f657600080fd5b505afa158015611a0a573d6000803e3d6000fd5b505050506040513d6020811015611a2057600080fd5b5051600160a060020a031633145b1515611a6e5760405160e560020a62461bcd0281526004018080602001828103825260418152602001806146cc6041913960600191505060405180910390fd5b611a788585613909565b95945050505050565b604080517f45786368616e676500000000000000000000000000000000000000000000000060208083019190915282516008818403018152602883018085528151918301919091206001547fdcf0aaed00000000000000000000000000000000000000000000000000000000909252602c84018190529351600094933393600160a060020a039093169263dcf0aaed92604c80840193829003018186803b158015611b2b57600080fd5b505afa158015611b3f573d6000803e3d6000fd5b505050506040513d6020811015611b5557600080fd5b5051600160a060020a031614611bb5576040805160e560020a62461bcd02815260206004820152601860248201527f6f6e6c79207265676973746572656420636f6e74726163740000000000000000604482015290519081900360640190fd5b611bbd614560565b6000611bc76135c6565b600b5491935091508114611c245781516009819055600b829055604080516020810190915290815260008051602061460b83398151915290611c0890613719565b600b546040805192835260208301919091528051918290030190a15b60408051602081019091526009548152600090611c419087613729565b33600090815260056020526040902054909150811115611cab576040805160e560020a62461bcd02815260206004820181905260248201527f76616c75652065786365656465642062616c616e6365206f662073656e646572604482015290519081900360640190fd5b600654611cbe908263ffffffff61389316565b60065533600090815260056020526040902054611ce1908263ffffffff61389316565b33600081815260056020908152604080832094909455835185815293519193600080516020614984833981519152929081900390910190a350600195945050505050565b60006060600060f4600160a060020a0316846040516020018082805190602001908083835b60208310611d695780518252601f199092019160209182019101611d4a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611dcc5780518252601f199092019160209182019101611dad565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611e2c576040519150601f19603f3d011682016040523d82523d6000602084013e611e31565b606091505b5092509050801515611e775760405160e560020a62461bcd0281526004018080602001828103825260388152602001806147346038913960400191505060405180910390fd5b610f91826000613a6e565b3315611ed8576040805160e560020a62461bcd02815260206004820152601060248201527f4f6e6c7920564d2063616e2063616c6c00000000000000000000000000000000604482015290519081900360640190fd5b611ee0613761565b600160a060020a031663e5839836306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b158015611f3857600080fd5b505afa158015611f4c573d6000803e3d6000fd5b505050506040513d6020811015611f6257600080fd5b505115611fa35760405160e560020a62461bcd02815260040180806020018281038252602281526020018061476c6022913960400191505060405180910390fd5b611fab614560565b6000611fb56135c6565b600b54919350915081146120125781516009819055600b829055604080516020810190915290815260008051602061460b83398151915290611ff690613719565b600b546040805192835260208301919091528051918290030190a15b6040805160208101909152600954815260009061202f9085613729565b600160a060020a03861660009081526005602052604090205490915061205b908263ffffffff61389316565b600160a060020a038616600090815260056020526040902055600654612087908263ffffffff61389316565b6006555050505050565b6040805160208082018590528183018490528251808303840181526060928301938490528051600094859360fa939282918401908083835b602083106120e85780518252601f1990920191602091820191016120c9565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612148576040519150601f19603f3d011682016040523d82523d6000602084013e61214d565b606091505b50925090508015156121935760405160e560020a62461bcd0281526004018080602001828103825260368152602001806148366036913960400191505060405180910390fd5b611a7882600061371d565b60006060600060f6600160a060020a0316846040516020018082805190602001908083835b602083106121e25780518252601f1990920191602091820191016121c3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106122455780518252601f199092019160209182019101612226565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146122a5576040519150601f19603f3d011682016040523d82523d6000602084013e6122aa565b606091505b5092509050801515611e775760405160e560020a62461bcd028152600401808060200182810382526023815260200180614a2b6023913960400191505060405180910390fd5b3315612346576040805160e560020a62461bcd02815260206004820152601060248201527f4f6e6c7920564d2063616e2063616c6c00000000000000000000000000000000604482015290519081900360640190fd5b61234e613761565b600160a060020a031663e5839836306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b1580156123a657600080fd5b505afa1580156123ba573d6000803e3d6000fd5b505050506040513d60208110156123d057600080fd5b5051156124115760405160e560020a62461bcd02815260040180806020018281038252602281526020018061476c6022913960400191505060405180910390fd5b6040805160208101909152600954815260009061242e9086613729565b600160a060020a038a1660009081526005602052604090205490915061245a908263ffffffff61383616565b600160a060020a038a1660009081526005602052604090205561248e6124818a8885613ad7565b829063ffffffff61383616565b905061249e6124818a8a87613ad7565b90506124ae6124818a8986613ad7565b6006549091506124c4908263ffffffff61383616565b600655505050505050505050565b600160a060020a0381166000908152600560205260408120546117f890612f58565b6124fc612a7f565b1515612540576040805160e560020a62461bcd02815260206004820181905260248201526000805160206148b7833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000610fed4361325e565b600154600160a060020a031681565b60005474010000000000000000000000000000000000000000900460ff1615612624576040805160e560020a62461bcd02815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a656400000000604482015290519081900360640190fd5b6000805474ff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000017905585151561269a5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806146a66026913960400191505060405180910390fd5b600085116126dc5760405160e560020a62461bcd0281526004018080602001828103825260278152602001806146596027913960400191505060405180910390fd5b6126e533613b87565b60006006556126f660028d8d614572565b5061270360038b8b614572565b506004805460ff191660ff8a1617905561271c86613747565b51600855612728613c39565b51600955600a85905542600b5582811461278c576040805160e560020a62461bcd02815260206004820152601560248201527f4172726179206c656e677468206d69736d617463680000000000000000000000604482015290519081900360640190fd5b60005b838110156127e9576127d08585838181106127a657fe5b90506020020135600160a060020a031684848481811015156127c457fe5b90506020020135613909565b506127e281600163ffffffff61383616565b905061278f565b506127f387612e55565b505050505050505050505050565b60006060600060f9600160a060020a031643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106128615780518252601f199092019160209182019101612842565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146128c1576040519150601f19603f3d011682016040523d82523d6000602084013e6128c6565b606091505b509250905080151561290c5760405160e560020a62461bcd0281526004018080602001828103825260358152602001806148016035913960400191505060405180910390fd5b61291782600061371d565b9250505090565b60006060600060f7600160a060020a0316846040516020018082805190602001908083835b602083106129625780518252601f199092019160209182019101612943565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106129c55780518252601f1990920191602091820191016129a6565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612a25576040519150601f19603f3d011682016040523d82523d6000602084013e612a2a565b606091505b5092509050801515610f865760405160e560020a62461bcd0281526004018080602001828103825260318152602001806149d06031913960400191505060405180910390fd5b600054600160a060020a031690565b60008054600160a060020a0316612a94613c5d565b600160a060020a031614905090565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d565780601f10610d2b57610100808354040283529160200191610d56565b6000610fed436117e5565b60006060600060f9600160a060020a031684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612b6f5780518252601f199092019160209182019101612b50565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612bcf576040519150601f19603f3d011682016040523d82523d6000602084013e612bd4565b606091505b5092509050801515610f865760405160e560020a62461bcd02815260040180806020018281038252602e81526020018061462b602e913960400191505060405180910390fd5b6000612c24614560565b6000612c2e6135c6565b600b5491935091508114612c8b5781516009819055600b829055604080516020810190915290815260008051602061460b83398151915290612c6f90613719565b600b546040805192835260208301919091528051918290030190a15b336000908152600760209081526040808320600160a060020a038916845290915281205490611779828763ffffffff61389316565b60408051602081019091526008548152600090819081908190612ce290613719565b60408051602081019091526009548152612cfb90613719565b600a54600b54929791965094509092509050565b6000612d19614560565b6000612d236135c6565b600b5491935091508114612d805781516009819055600b829055604080516020810190915290815260008051602061460b83398151915290612d6490613719565b600b546040805192835260208301919091528051918290030190a15b612d88613761565b600160a060020a031663e5839836306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b158015612de057600080fd5b505afa158015612df4573d6000803e3d6000fd5b505050506040513d6020811015612e0a57600080fd5b505115612e4b5760405160e560020a62461bcd02815260040180806020018281038252602281526020018061476c6022913960400191505060405180910390fd5b611a788585613c61565b612e5d612a7f565b1515612ea1576040805160e560020a62461bcd02815260206004820181905260248201526000805160206148b7833981519152604482015290519081900360640190fd5b600160a060020a0381161515612f01576040805160e560020a62461bcd02815260206004820181905260248201527f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383169081179091556040517f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b90600090a250565b6000612f62614560565b612f6a6135c6565b509050610fb8612f8982612f7d86613dbd565b9063ffffffff613e2e16565b613f1d565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b604080516000808252602082019283905281519092606092849260f89290819081908082805b60208310612ffe5780518252601f199092019160209182019101612fdf565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461305e576040519150601f19603f3d011682016040523d82523d6000602084013e613063565b606091505b509250905080151561290c5760405160e560020a62461bcd02815260040180806020018281038252602581526020018061495f6025913960400191505060405180910390fd5b60006130b3614560565b60006130bd6135c6565b600b549193509150811461311a5781516009819055600b829055604080516020810190915290815260008051602061460b833981519152906130fe90613719565b600b546040805192835260208301919091528051918290030190a15b613122613761565b600160a060020a031663e5839836306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b15801561317a57600080fd5b505afa15801561318e573d6000803e3d6000fd5b505050506040513d60208110156131a457600080fd5b5051156131e55760405160e560020a62461bcd02815260040180806020018281038252602281526020018061476c6022913960400191505060405180910390fd5b60006131f18888612d0f565b90507fe5d4e30fb8364e57bc4d662a07d0cf36f4c34552004c4c3624620a2c1d1c03dc868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a1979650505050505050565b60006117f860036132906002613284600261327888612b0f565b9063ffffffff613f2e16565b9063ffffffff61383616565b9063ffffffff613f8e16565b60008086158015906132ad57508415155b1515613303576040805160e560020a62461bcd02815260206004820152601560248201527f612064656e6f6d696e61746f72206973207a65726f0000000000000000000000604482015290519081900360640190fd5b6000806000606060fc600160a060020a03168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b6020831061338c5780518252601f19909201916020918201910161336d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146133ec576040519150601f19603f3d011682016040523d82523d6000602084013e6133f1565b606091505b5090925090508115156134385760405160e560020a62461bcd0281526004018080602001828103825260278152602001806149386027913960400191505060405180910390fd5b61344381600061371d565b935061345081602061371d565b939c939b50929950505050505050505050565b61346b612a7f565b15156134af576040805160e560020a62461bcd02815260206004820181905260248201526000805160206148b7833981519152604482015290519081900360640190fd5b6134b881613b87565b50565b60006060600060f5600160a060020a031684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061351b5780518252601f1990920191602091820191016134fc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461357b576040519150601f19603f3d011682016040523d82523d6000602084013e613580565b606091505b5092509050801515611e775760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806149a4602c913960400191505060405180910390fd5b6135ce614560565b600a54600b546000916135e7919063ffffffff61383616565b421015613609575050600b546040805160208101909152600954815290613715565b600a54600b546000918291829161362b9161329090429063ffffffff61389316565b6040805160208101909152600954815290915061368c9061364b90613719565b61365b613656613c39565b613719565b6040805160208101909152600854815261367490613719565b61367f613656613c39565b600454869060ff1661329c565b909350915082158061369c575081155b156136c1575050600b5460408051602081019091526009548152935091506137159050565b6136c9614560565b6136de6136d584613747565b612f7d86613747565b600a5490915060009061370a906136fb908563ffffffff613f2e16565b600b549063ffffffff61383616565b919650909450505050505b9091565b5190565b6000610fb88383613a6e565b6000610fb8612f8961373a84613dbd565b859063ffffffff613fd016565b61374f614560565b50604080516020810190915290815290565b600154604080517f467265657a65720000000000000000000000000000000000000000000000000060208083019190915282518083036007018152602783018085528151918301919091207fdcf0aaed00000000000000000000000000000000000000000000000000000000909152602b8301529151600093600160a060020a03169263dcf0aaed92604b8082019391829003018186803b15801561380557600080fd5b505afa158015613819573d6000803e3d6000fd5b505050506040513d602081101561382f57600080fd5b5051905090565b600082820183811015610fb8576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610fb883836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614362565b60008082848115156138e357fe5b04905082848115156138f157fe5b0615156138ff5790506117f8565b60010190506117f8565b6000600160a060020a038316151561396b576040805160e560020a62461bcd02815260206004820152601760248201527f3020697320612072657365727665642061646472657373000000000000000000604482015290519081900360640190fd5b600082116139c3576040805160e560020a62461bcd02815260206004820152601660248201527f6d696e742076616c7565206d757374206265203e203000000000000000000000604482015290519081900360640190fd5b604080516020810190915260095481526000906139e09084613729565b6006549091506139f6908263ffffffff61383616565b600655600160a060020a038416600090815260056020526040902054613a22908263ffffffff61383616565b600160a060020a03851660008181526005602090815260408083209490945583518781529351929391926000805160206149848339815191529281900390910190a35060019392505050565b600081602001835110151515613ace576040805160e560020a62461bcd02815260206004820152601460248201527f736c6963696e67206f7574206f662072616e6765000000000000000000000000604482015290519081900360640190fd5b50016020015190565b6000600160a060020a0383161515613af157506000610fb8565b60408051602081019091526009548152600090613b0e9084613729565b600160a060020a038516600090815260056020526040902054909150613b3a908263ffffffff61383616565b600160a060020a03808616600081815260056020908152604091829020949094558051878152905191939289169260008051602061498483398151915292918290030190a3949350505050565b600160a060020a0381161515613bd15760405160e560020a62461bcd0281526004018080602001828103825260268152602001806146806026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b613c41614560565b50604080516020810190915269d3c21bcecceda1000000815290565b3390565b6000600160a060020a0383161515613cad5760405160e560020a62461bcd02815260040180806020018281038252602a815260200180614a01602a913960400191505060405180910390fd5b60408051602081019091526009548152600090613cca9084613729565b33600090815260056020526040902054909150811115613d1e5760405160e560020a62461bcd0281526004018080602001828103825260298152602001806148d76029913960400191505060405180910390fd5b33600090815260056020526040902054613d3e908263ffffffff61389316565b3360009081526005602052604080822092909255600160a060020a03861681522054613d70908263ffffffff61383616565b600160a060020a0385166000818152600560209081526040918290209390935580518681529051919233926000805160206149848339815191529281900390910190a35060019392505050565b613dc5614560565b613dcd6143fc565b821115613e0e5760405160e560020a62461bcd02815260040180806020018281038252603681526020018061478e6036913960400191505060405180910390fd5b50604080516020810190915269d3c21bcecceda100000082028152919050565b613e36614560565b81511515613e8e576040805160e560020a62461bcd02815260206004820152601160248201527f63616e2774206469766964652062792030000000000000000000000000000000604482015290519081900360640190fd5b825169d3c21bcecceda10000008181029190820414613ef7576040805160e560020a62461bcd02815260206004820152601260248201527f6f766572666c6f77206174206469766964650000000000000000000000000000604482015290519081900360640190fd5b602060405190810160405280846000015183811515613f1257fe5b049052949350505050565b5169d3c21bcecceda1000000900490565b6000821515613f3f575060006117f8565b828202828482811515613f4e57fe5b0414610fb85760405160e560020a62461bcd0281526004018080602001828103825260218152602001806148966021913960400191505060405180910390fd5b6000610fb883836040805190810160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614417565b613fd8614560565b82511580613fe557508151155b15613fff57506040805160208101909152600081526117f8565b815169d3c21bcecceda100000014156140195750816117f8565b825169d3c21bcecceda100000014156140335750806117f8565b600069d3c21bcecceda100000061404985614484565b5181151561405357fe5b0490506000614061856144af565b519050600069d3c21bcecceda100000061407a86614484565b5181151561408457fe5b0490506000614092866144af565b5190508382028415614100578285828115156140aa57fe5b0414614100576040805160e560020a62461bcd02815260206004820152601660248201527f6f766572666c6f77207831793120646574656374656400000000000000000000604482015290519081900360640190fd5b69d3c21bcecceda10000008102811561417f5769d3c21bcecceda1000000828281151561412957fe5b041461417f576040805160e560020a62461bcd02815260206004820152601f60248201527f6f766572666c6f772078317931202a2066697865643120646574656374656400604482015290519081900360640190fd5b90508084840285156141ed5784868281151561419757fe5b04146141ed576040805160e560020a62461bcd02815260206004820152601660248201527f6f766572666c6f77207832793120646574656374656400000000000000000000604482015290519081900360640190fd5b86840287156142585784888281151561420257fe5b0414614258576040805160e560020a62461bcd02815260206004820152601660248201527f6f766572666c6f77207831793220646574656374656400000000000000000000604482015290519081900360640190fd5b6142606144db565b8781151561426a57fe5b0496506142756144db565b8581151561427f57fe5b04945086850287156142ed5785888281151561429757fe5b04146142ed576040805160e560020a62461bcd02815260206004820152601660248201527f6f766572666c6f77207832793220646574656374656400000000000000000000604482015290519081900360640190fd5b6142f5614560565b50604080516020818101835287825282519081019092528482529061431b9082906144e4565b905061433681602060405190810160405280868152506144e4565b905061435181602060405190810160405280858152506144e4565b9d9c50505050505050505050505050565b600081848411156143f45760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156143b95781810151838201526020016143a1565b50505050905090810190601f1680156143e65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b7601357c299a88ea76a58924d52ce4f26a85af186c2b9e7490565b60008181841161446c5760405160e560020a62461bcd028152600401808060200182810382528381815181526020019150805190602001908083836000838110156143b95781810151838201526020016143a1565b506000838581151561447a57fe5b0495945050505050565b61448c614560565b506040805160208101909152905169d3c21bcecceda10000009081900402815290565b6144b7614560565b506040805160208101909152905169d3c21bcecceda1000000808204029003815290565b64e8d4a5100090565b6144ec614560565b815183519081019081101561454b576040805160e560020a62461bcd02815260206004820152601560248201527f616464206f766572666c6f772064657465637465640000000000000000000000604482015290519081900360640190fd5b60408051602081019091529081529392505050565b60408051602081019091526000815290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106145b35782800160ff198235161785556145e0565b828001600101855582156145e0579182015b828111156145e05782358255916020019190600101906145c5565b506145ec9291506145f0565b5090565b610d5e91905b808211156145ec57600081556001016145f656fe08f3ed03ec9e579d1f6ab2f9e0d3dc661704696deabe37a6b6df7014f1b30a976572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c65696e666c6174696f6e466163746f72557064617465506572696f64206d757374206265203e20304f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d7573742070726f766964652061206e6f6e2d7a65726f20696e666c6174696f6e20726174654f6e6c79207468652045786368616e676520616e642056616c696461746f727320636f6e7472616374732061726520617574686f72697a656420746f206d696e744d7573742070726f766964652061206e6f6e2d7a65726f20696e666c6174696f6e20726174652e6572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c6563616e27742063616c6c207768656e20636f6e74726163742069732066726f7a656e63616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e6577466978656428296572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c6572657365727665642061646472657373203078302063616e6e6f74206861766520616c6c6f77616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65727472616e736665722076616c75652065786365656465642062616c616e6365206f662073656e6465727472616e736665722076616c75652065786365656465642073656e646572277320616c6c6f77616e636520666f7220726563697069656e746572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c65ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c657472616e7366657220617474656d7074656420746f2072657365727665642061646472657373203078306572726f722063616c6c696e67206861736848656164657220707265636f6d70696c65a165627a7a723058206d1f42490b9a062384c54a7c8d7275fc4c5235601ad3216e0ee75c8112551c700029"

// DeployStableToken deploys a new Ethereum contract, binding an instance of StableToken to it.
func DeployStableToken(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *StableToken, error) {
	parsed, err := abi.JSON(strings.NewReader(StableTokenABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(StableTokenBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &StableToken{StableTokenCaller: StableTokenCaller{contract: contract}, StableTokenTransactor: StableTokenTransactor{contract: contract}, StableTokenFilterer: StableTokenFilterer{contract: contract}}, nil
}

// StableToken is an auto generated Go binding around an Ethereum contract.
type StableToken struct {
	StableTokenCaller     // Read-only binding to the contract
	StableTokenTransactor // Write-only binding to the contract
	StableTokenFilterer   // Log filterer for contract events
}

// StableTokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type StableTokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StableTokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type StableTokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StableTokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type StableTokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StableTokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type StableTokenSession struct {
	Contract     *StableToken      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// StableTokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type StableTokenCallerSession struct {
	Contract *StableTokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// StableTokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type StableTokenTransactorSession struct {
	Contract     *StableTokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// StableTokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type StableTokenRaw struct {
	Contract *StableToken // Generic contract binding to access the raw methods on
}

// StableTokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type StableTokenCallerRaw struct {
	Contract *StableTokenCaller // Generic read-only contract binding to access the raw methods on
}

// StableTokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type StableTokenTransactorRaw struct {
	Contract *StableTokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewStableToken creates a new instance of StableToken, bound to a specific deployed contract.
func NewStableToken(address common.Address, backend bind.ContractBackend) (*StableToken, error) {
	contract, err := bindStableToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &StableToken{StableTokenCaller: StableTokenCaller{contract: contract}, StableTokenTransactor: StableTokenTransactor{contract: contract}, StableTokenFilterer: StableTokenFilterer{contract: contract}}, nil
}

// NewStableTokenCaller creates a new read-only instance of StableToken, bound to a specific deployed contract.
func NewStableTokenCaller(address common.Address, caller bind.ContractCaller) (*StableTokenCaller, error) {
	contract, err := bindStableToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &StableTokenCaller{contract: contract}, nil
}

// NewStableTokenTransactor creates a new write-only instance of StableToken, bound to a specific deployed contract.
func NewStableTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*StableTokenTransactor, error) {
	contract, err := bindStableToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &StableTokenTransactor{contract: contract}, nil
}

// NewStableTokenFilterer creates a new log filterer instance of StableToken, bound to a specific deployed contract.
func NewStableTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*StableTokenFilterer, error) {
	contract, err := bindStableToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &StableTokenFilterer{contract: contract}, nil
}

// bindStableToken binds a generic wrapper to an already deployed contract.
func bindStableToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(StableTokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_StableToken *StableTokenRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _StableToken.Contract.StableTokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_StableToken *StableTokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StableToken.Contract.StableTokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_StableToken *StableTokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _StableToken.Contract.StableTokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_StableToken *StableTokenCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _StableToken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_StableToken *StableTokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StableToken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_StableToken *StableTokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _StableToken.Contract.contract.Transact(opts, method, params...)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address accountOwner, address spender) constant returns(uint256)
func (_StableToken *StableTokenCaller) Allowance(opts *bind.CallOpts, accountOwner common.Address, spender common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "allowance", accountOwner, spender)
	return *ret0, err
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address accountOwner, address spender) constant returns(uint256)
func (_StableToken *StableTokenSession) Allowance(accountOwner common.Address, spender common.Address) (*big.Int, error) {
	return _StableToken.Contract.Allowance(&_StableToken.CallOpts, accountOwner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address accountOwner, address spender) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) Allowance(accountOwner common.Address, spender common.Address) (*big.Int, error) {
	return _StableToken.Contract.Allowance(&_StableToken.CallOpts, accountOwner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address accountOwner) constant returns(uint256)
func (_StableToken *StableTokenCaller) BalanceOf(opts *bind.CallOpts, accountOwner common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "balanceOf", accountOwner)
	return *ret0, err
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address accountOwner) constant returns(uint256)
func (_StableToken *StableTokenSession) BalanceOf(accountOwner common.Address) (*big.Int, error) {
	return _StableToken.Contract.BalanceOf(&_StableToken.CallOpts, accountOwner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address accountOwner) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) BalanceOf(accountOwner common.Address) (*big.Int, error) {
	return _StableToken.Contract.BalanceOf(&_StableToken.CallOpts, accountOwner)
}

// CheckProofOfPossession is a free data retrieval call binding the contract method 0x23f0ab65.
//
// Solidity: function checkProofOfPossession(address sender, bytes blsKey, bytes blsPop) constant returns(bool)
func (_StableToken *StableTokenCaller) CheckProofOfPossession(opts *bind.CallOpts, sender common.Address, blsKey []byte, blsPop []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "checkProofOfPossession", sender, blsKey, blsPop)
	return *ret0, err
}

// CheckProofOfPossession is a free data retrieval call binding the contract method 0x23f0ab65.
//
// Solidity: function checkProofOfPossession(address sender, bytes blsKey, bytes blsPop) constant returns(bool)
func (_StableToken *StableTokenSession) CheckProofOfPossession(sender common.Address, blsKey []byte, blsPop []byte) (bool, error) {
	return _StableToken.Contract.CheckProofOfPossession(&_StableToken.CallOpts, sender, blsKey, blsPop)
}

// CheckProofOfPossession is a free data retrieval call binding the contract method 0x23f0ab65.
//
// Solidity: function checkProofOfPossession(address sender, bytes blsKey, bytes blsPop) constant returns(bool)
func (_StableToken *StableTokenCallerSession) CheckProofOfPossession(sender common.Address, blsKey []byte, blsPop []byte) (bool, error) {
	return _StableToken.Contract.CheckProofOfPossession(&_StableToken.CallOpts, sender, blsKey, blsPop)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_StableToken *StableTokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "decimals")
	return *ret0, err
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_StableToken *StableTokenSession) Decimals() (uint8, error) {
	return _StableToken.Contract.Decimals(&_StableToken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_StableToken *StableTokenCallerSession) Decimals() (uint8, error) {
	return _StableToken.Contract.Decimals(&_StableToken.CallOpts)
}

// FractionMulExp is a free data retrieval call binding the contract method 0xec683072.
//
// Solidity: function fractionMulExp(uint256 aNumerator, uint256 aDenominator, uint256 bNumerator, uint256 bDenominator, uint256 exponent, uint256 _decimals) constant returns(uint256, uint256)
func (_StableToken *StableTokenCaller) FractionMulExp(opts *bind.CallOpts, aNumerator *big.Int, aDenominator *big.Int, bNumerator *big.Int, bDenominator *big.Int, exponent *big.Int, _decimals *big.Int) (*big.Int, *big.Int, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _StableToken.contract.Call(opts, out, "fractionMulExp", aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)
	return *ret0, *ret1, err
}

// FractionMulExp is a free data retrieval call binding the contract method 0xec683072.
//
// Solidity: function fractionMulExp(uint256 aNumerator, uint256 aDenominator, uint256 bNumerator, uint256 bDenominator, uint256 exponent, uint256 _decimals) constant returns(uint256, uint256)
func (_StableToken *StableTokenSession) FractionMulExp(aNumerator *big.Int, aDenominator *big.Int, bNumerator *big.Int, bDenominator *big.Int, exponent *big.Int, _decimals *big.Int) (*big.Int, *big.Int, error) {
	return _StableToken.Contract.FractionMulExp(&_StableToken.CallOpts, aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)
}

// FractionMulExp is a free data retrieval call binding the contract method 0xec683072.
//
// Solidity: function fractionMulExp(uint256 aNumerator, uint256 aDenominator, uint256 bNumerator, uint256 bDenominator, uint256 exponent, uint256 _decimals) constant returns(uint256, uint256)
func (_StableToken *StableTokenCallerSession) FractionMulExp(aNumerator *big.Int, aDenominator *big.Int, bNumerator *big.Int, bDenominator *big.Int, exponent *big.Int, _decimals *big.Int) (*big.Int, *big.Int, error) {
	return _StableToken.Contract.FractionMulExp(&_StableToken.CallOpts, aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)
}

// GetBlockNumberFromHeader is a free data retrieval call binding the contract method 0x8a883626.
//
// Solidity: function getBlockNumberFromHeader(bytes header) constant returns(uint256)
func (_StableToken *StableTokenCaller) GetBlockNumberFromHeader(opts *bind.CallOpts, header []byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "getBlockNumberFromHeader", header)
	return *ret0, err
}

// GetBlockNumberFromHeader is a free data retrieval call binding the contract method 0x8a883626.
//
// Solidity: function getBlockNumberFromHeader(bytes header) constant returns(uint256)
func (_StableToken *StableTokenSession) GetBlockNumberFromHeader(header []byte) (*big.Int, error) {
	return _StableToken.Contract.GetBlockNumberFromHeader(&_StableToken.CallOpts, header)
}

// GetBlockNumberFromHeader is a free data retrieval call binding the contract method 0x8a883626.
//
// Solidity: function getBlockNumberFromHeader(bytes header) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) GetBlockNumberFromHeader(header []byte) (*big.Int, error) {
	return _StableToken.Contract.GetBlockNumberFromHeader(&_StableToken.CallOpts, header)
}

// GetEpochNumber is a free data retrieval call binding the contract method 0x9a7b3be7.
//
// Solidity: function getEpochNumber() constant returns(uint256)
func (_StableToken *StableTokenCaller) GetEpochNumber(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "getEpochNumber")
	return *ret0, err
}

// GetEpochNumber is a free data retrieval call binding the contract method 0x9a7b3be7.
//
// Solidity: function getEpochNumber() constant returns(uint256)
func (_StableToken *StableTokenSession) GetEpochNumber() (*big.Int, error) {
	return _StableToken.Contract.GetEpochNumber(&_StableToken.CallOpts)
}

// GetEpochNumber is a free data retrieval call binding the contract method 0x9a7b3be7.
//
// Solidity: function getEpochNumber() constant returns(uint256)
func (_StableToken *StableTokenCallerSession) GetEpochNumber() (*big.Int, error) {
	return _StableToken.Contract.GetEpochNumber(&_StableToken.CallOpts)
}

// GetEpochNumberOfBlock is a free data retrieval call binding the contract method 0x3b1eb4bf.
//
// Solidity: function getEpochNumberOfBlock(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenCaller) GetEpochNumberOfBlock(opts *bind.CallOpts, blockNumber *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "getEpochNumberOfBlock", blockNumber)
	return *ret0, err
}

// GetEpochNumberOfBlock is a free data retrieval call binding the contract method 0x3b1eb4bf.
//
// Solidity: function getEpochNumberOfBlock(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenSession) GetEpochNumberOfBlock(blockNumber *big.Int) (*big.Int, error) {
	return _StableToken.Contract.GetEpochNumberOfBlock(&_StableToken.CallOpts, blockNumber)
}

// GetEpochNumberOfBlock is a free data retrieval call binding the contract method 0x3b1eb4bf.
//
// Solidity: function getEpochNumberOfBlock(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) GetEpochNumberOfBlock(blockNumber *big.Int) (*big.Int, error) {
	return _StableToken.Contract.GetEpochNumberOfBlock(&_StableToken.CallOpts, blockNumber)
}

// GetEpochSize is a free data retrieval call binding the contract method 0xdf4da461.
//
// Solidity: function getEpochSize() constant returns(uint256)
func (_StableToken *StableTokenCaller) GetEpochSize(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "getEpochSize")
	return *ret0, err
}

// GetEpochSize is a free data retrieval call binding the contract method 0xdf4da461.
//
// Solidity: function getEpochSize() constant returns(uint256)
func (_StableToken *StableTokenSession) GetEpochSize() (*big.Int, error) {
	return _StableToken.Contract.GetEpochSize(&_StableToken.CallOpts)
}

// GetEpochSize is a free data retrieval call binding the contract method 0xdf4da461.
//
// Solidity: function getEpochSize() constant returns(uint256)
func (_StableToken *StableTokenCallerSession) GetEpochSize() (*big.Int, error) {
	return _StableToken.Contract.GetEpochSize(&_StableToken.CallOpts)
}

// GetInflationParameters is a free data retrieval call binding the contract method 0xa67f8747.
//
// Solidity: function getInflationParameters() constant returns(uint256, uint256, uint256, uint256)
func (_StableToken *StableTokenCaller) GetInflationParameters(opts *bind.CallOpts) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(*big.Int)
		ret2 = new(*big.Int)
		ret3 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _StableToken.contract.Call(opts, out, "getInflationParameters")
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetInflationParameters is a free data retrieval call binding the contract method 0xa67f8747.
//
// Solidity: function getInflationParameters() constant returns(uint256, uint256, uint256, uint256)
func (_StableToken *StableTokenSession) GetInflationParameters() (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _StableToken.Contract.GetInflationParameters(&_StableToken.CallOpts)
}

// GetInflationParameters is a free data retrieval call binding the contract method 0xa67f8747.
//
// Solidity: function getInflationParameters() constant returns(uint256, uint256, uint256, uint256)
func (_StableToken *StableTokenCallerSession) GetInflationParameters() (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _StableToken.Contract.GetInflationParameters(&_StableToken.CallOpts)
}

// GetParentSealBitmap is a free data retrieval call binding the contract method 0xfae8db0a.
//
// Solidity: function getParentSealBitmap(uint256 blockNumber) constant returns(bytes32)
func (_StableToken *StableTokenCaller) GetParentSealBitmap(opts *bind.CallOpts, blockNumber *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "getParentSealBitmap", blockNumber)
	return *ret0, err
}

// GetParentSealBitmap is a free data retrieval call binding the contract method 0xfae8db0a.
//
// Solidity: function getParentSealBitmap(uint256 blockNumber) constant returns(bytes32)
func (_StableToken *StableTokenSession) GetParentSealBitmap(blockNumber *big.Int) ([32]byte, error) {
	return _StableToken.Contract.GetParentSealBitmap(&_StableToken.CallOpts, blockNumber)
}

// GetParentSealBitmap is a free data retrieval call binding the contract method 0xfae8db0a.
//
// Solidity: function getParentSealBitmap(uint256 blockNumber) constant returns(bytes32)
func (_StableToken *StableTokenCallerSession) GetParentSealBitmap(blockNumber *big.Int) ([32]byte, error) {
	return _StableToken.Contract.GetParentSealBitmap(&_StableToken.CallOpts, blockNumber)
}

// GetVerifiedSealBitmapFromHeader is a free data retrieval call binding the contract method 0x4b2c2f44.
//
// Solidity: function getVerifiedSealBitmapFromHeader(bytes header) constant returns(bytes32)
func (_StableToken *StableTokenCaller) GetVerifiedSealBitmapFromHeader(opts *bind.CallOpts, header []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "getVerifiedSealBitmapFromHeader", header)
	return *ret0, err
}

// GetVerifiedSealBitmapFromHeader is a free data retrieval call binding the contract method 0x4b2c2f44.
//
// Solidity: function getVerifiedSealBitmapFromHeader(bytes header) constant returns(bytes32)
func (_StableToken *StableTokenSession) GetVerifiedSealBitmapFromHeader(header []byte) ([32]byte, error) {
	return _StableToken.Contract.GetVerifiedSealBitmapFromHeader(&_StableToken.CallOpts, header)
}

// GetVerifiedSealBitmapFromHeader is a free data retrieval call binding the contract method 0x4b2c2f44.
//
// Solidity: function getVerifiedSealBitmapFromHeader(bytes header) constant returns(bytes32)
func (_StableToken *StableTokenCallerSession) GetVerifiedSealBitmapFromHeader(header []byte) ([32]byte, error) {
	return _StableToken.Contract.GetVerifiedSealBitmapFromHeader(&_StableToken.CallOpts, header)
}

// HashHeader is a free data retrieval call binding the contract method 0x67960e91.
//
// Solidity: function hashHeader(bytes header) constant returns(bytes32)
func (_StableToken *StableTokenCaller) HashHeader(opts *bind.CallOpts, header []byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "hashHeader", header)
	return *ret0, err
}

// HashHeader is a free data retrieval call binding the contract method 0x67960e91.
//
// Solidity: function hashHeader(bytes header) constant returns(bytes32)
func (_StableToken *StableTokenSession) HashHeader(header []byte) ([32]byte, error) {
	return _StableToken.Contract.HashHeader(&_StableToken.CallOpts, header)
}

// HashHeader is a free data retrieval call binding the contract method 0x67960e91.
//
// Solidity: function hashHeader(bytes header) constant returns(bytes32)
func (_StableToken *StableTokenCallerSession) HashHeader(header []byte) ([32]byte, error) {
	return _StableToken.Contract.HashHeader(&_StableToken.CallOpts, header)
}

// Initialized is a free data retrieval call binding the contract method 0x158ef93e.
//
// Solidity: function initialized() constant returns(bool)
func (_StableToken *StableTokenCaller) Initialized(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "initialized")
	return *ret0, err
}

// Initialized is a free data retrieval call binding the contract method 0x158ef93e.
//
// Solidity: function initialized() constant returns(bool)
func (_StableToken *StableTokenSession) Initialized() (bool, error) {
	return _StableToken.Contract.Initialized(&_StableToken.CallOpts)
}

// Initialized is a free data retrieval call binding the contract method 0x158ef93e.
//
// Solidity: function initialized() constant returns(bool)
func (_StableToken *StableTokenCallerSession) Initialized() (bool, error) {
	return _StableToken.Contract.Initialized(&_StableToken.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() constant returns(bool)
func (_StableToken *StableTokenCaller) IsOwner(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "isOwner")
	return *ret0, err
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() constant returns(bool)
func (_StableToken *StableTokenSession) IsOwner() (bool, error) {
	return _StableToken.Contract.IsOwner(&_StableToken.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() constant returns(bool)
func (_StableToken *StableTokenCallerSession) IsOwner() (bool, error) {
	return _StableToken.Contract.IsOwner(&_StableToken.CallOpts)
}

// MinQuorumSize is a free data retrieval call binding the contract method 0xe50e652d.
//
// Solidity: function minQuorumSize(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenCaller) MinQuorumSize(opts *bind.CallOpts, blockNumber *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "minQuorumSize", blockNumber)
	return *ret0, err
}

// MinQuorumSize is a free data retrieval call binding the contract method 0xe50e652d.
//
// Solidity: function minQuorumSize(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenSession) MinQuorumSize(blockNumber *big.Int) (*big.Int, error) {
	return _StableToken.Contract.MinQuorumSize(&_StableToken.CallOpts, blockNumber)
}

// MinQuorumSize is a free data retrieval call binding the contract method 0xe50e652d.
//
// Solidity: function minQuorumSize(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) MinQuorumSize(blockNumber *big.Int) (*big.Int, error) {
	return _StableToken.Contract.MinQuorumSize(&_StableToken.CallOpts, blockNumber)
}

// MinQuorumSizeInCurrentSet is a free data retrieval call binding the contract method 0x7385e5da.
//
// Solidity: function minQuorumSizeInCurrentSet() constant returns(uint256)
func (_StableToken *StableTokenCaller) MinQuorumSizeInCurrentSet(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "minQuorumSizeInCurrentSet")
	return *ret0, err
}

// MinQuorumSizeInCurrentSet is a free data retrieval call binding the contract method 0x7385e5da.
//
// Solidity: function minQuorumSizeInCurrentSet() constant returns(uint256)
func (_StableToken *StableTokenSession) MinQuorumSizeInCurrentSet() (*big.Int, error) {
	return _StableToken.Contract.MinQuorumSizeInCurrentSet(&_StableToken.CallOpts)
}

// MinQuorumSizeInCurrentSet is a free data retrieval call binding the contract method 0x7385e5da.
//
// Solidity: function minQuorumSizeInCurrentSet() constant returns(uint256)
func (_StableToken *StableTokenCallerSession) MinQuorumSizeInCurrentSet() (*big.Int, error) {
	return _StableToken.Contract.MinQuorumSizeInCurrentSet(&_StableToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_StableToken *StableTokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_StableToken *StableTokenSession) Name() (string, error) {
	return _StableToken.Contract.Name(&_StableToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_StableToken *StableTokenCallerSession) Name() (string, error) {
	return _StableToken.Contract.Name(&_StableToken.CallOpts)
}

// NumberValidatorsInCurrentSet is a free data retrieval call binding the contract method 0x87ee8a0f.
//
// Solidity: function numberValidatorsInCurrentSet() constant returns(uint256)
func (_StableToken *StableTokenCaller) NumberValidatorsInCurrentSet(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "numberValidatorsInCurrentSet")
	return *ret0, err
}

// NumberValidatorsInCurrentSet is a free data retrieval call binding the contract method 0x87ee8a0f.
//
// Solidity: function numberValidatorsInCurrentSet() constant returns(uint256)
func (_StableToken *StableTokenSession) NumberValidatorsInCurrentSet() (*big.Int, error) {
	return _StableToken.Contract.NumberValidatorsInCurrentSet(&_StableToken.CallOpts)
}

// NumberValidatorsInCurrentSet is a free data retrieval call binding the contract method 0x87ee8a0f.
//
// Solidity: function numberValidatorsInCurrentSet() constant returns(uint256)
func (_StableToken *StableTokenCallerSession) NumberValidatorsInCurrentSet() (*big.Int, error) {
	return _StableToken.Contract.NumberValidatorsInCurrentSet(&_StableToken.CallOpts)
}

// NumberValidatorsInSet is a free data retrieval call binding the contract method 0x9b2b592f.
//
// Solidity: function numberValidatorsInSet(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenCaller) NumberValidatorsInSet(opts *bind.CallOpts, blockNumber *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "numberValidatorsInSet", blockNumber)
	return *ret0, err
}

// NumberValidatorsInSet is a free data retrieval call binding the contract method 0x9b2b592f.
//
// Solidity: function numberValidatorsInSet(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenSession) NumberValidatorsInSet(blockNumber *big.Int) (*big.Int, error) {
	return _StableToken.Contract.NumberValidatorsInSet(&_StableToken.CallOpts, blockNumber)
}

// NumberValidatorsInSet is a free data retrieval call binding the contract method 0x9b2b592f.
//
// Solidity: function numberValidatorsInSet(uint256 blockNumber) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) NumberValidatorsInSet(blockNumber *big.Int) (*big.Int, error) {
	return _StableToken.Contract.NumberValidatorsInSet(&_StableToken.CallOpts, blockNumber)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_StableToken *StableTokenCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_StableToken *StableTokenSession) Owner() (common.Address, error) {
	return _StableToken.Contract.Owner(&_StableToken.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_StableToken *StableTokenCallerSession) Owner() (common.Address, error) {
	return _StableToken.Contract.Owner(&_StableToken.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_StableToken *StableTokenCaller) Registry(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "registry")
	return *ret0, err
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_StableToken *StableTokenSession) Registry() (common.Address, error) {
	return _StableToken.Contract.Registry(&_StableToken.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_StableToken *StableTokenCallerSession) Registry() (common.Address, error) {
	return _StableToken.Contract.Registry(&_StableToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_StableToken *StableTokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "symbol")
	return *ret0, err
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_StableToken *StableTokenSession) Symbol() (string, error) {
	return _StableToken.Contract.Symbol(&_StableToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_StableToken *StableTokenCallerSession) Symbol() (string, error) {
	return _StableToken.Contract.Symbol(&_StableToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_StableToken *StableTokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "totalSupply")
	return *ret0, err
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_StableToken *StableTokenSession) TotalSupply() (*big.Int, error) {
	return _StableToken.Contract.TotalSupply(&_StableToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_StableToken *StableTokenCallerSession) TotalSupply() (*big.Int, error) {
	return _StableToken.Contract.TotalSupply(&_StableToken.CallOpts)
}

// UnitsToValue is a free data retrieval call binding the contract method 0xaf31f587.
//
// Solidity: function unitsToValue(uint256 units) constant returns(uint256)
func (_StableToken *StableTokenCaller) UnitsToValue(opts *bind.CallOpts, units *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "unitsToValue", units)
	return *ret0, err
}

// UnitsToValue is a free data retrieval call binding the contract method 0xaf31f587.
//
// Solidity: function unitsToValue(uint256 units) constant returns(uint256)
func (_StableToken *StableTokenSession) UnitsToValue(units *big.Int) (*big.Int, error) {
	return _StableToken.Contract.UnitsToValue(&_StableToken.CallOpts, units)
}

// UnitsToValue is a free data retrieval call binding the contract method 0xaf31f587.
//
// Solidity: function unitsToValue(uint256 units) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) UnitsToValue(units *big.Int) (*big.Int, error) {
	return _StableToken.Contract.UnitsToValue(&_StableToken.CallOpts, units)
}

// ValidatorSignerAddressFromCurrentSet is a free data retrieval call binding the contract method 0x123633ea.
//
// Solidity: function validatorSignerAddressFromCurrentSet(uint256 index) constant returns(address)
func (_StableToken *StableTokenCaller) ValidatorSignerAddressFromCurrentSet(opts *bind.CallOpts, index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "validatorSignerAddressFromCurrentSet", index)
	return *ret0, err
}

// ValidatorSignerAddressFromCurrentSet is a free data retrieval call binding the contract method 0x123633ea.
//
// Solidity: function validatorSignerAddressFromCurrentSet(uint256 index) constant returns(address)
func (_StableToken *StableTokenSession) ValidatorSignerAddressFromCurrentSet(index *big.Int) (common.Address, error) {
	return _StableToken.Contract.ValidatorSignerAddressFromCurrentSet(&_StableToken.CallOpts, index)
}

// ValidatorSignerAddressFromCurrentSet is a free data retrieval call binding the contract method 0x123633ea.
//
// Solidity: function validatorSignerAddressFromCurrentSet(uint256 index) constant returns(address)
func (_StableToken *StableTokenCallerSession) ValidatorSignerAddressFromCurrentSet(index *big.Int) (common.Address, error) {
	return _StableToken.Contract.ValidatorSignerAddressFromCurrentSet(&_StableToken.CallOpts, index)
}

// ValidatorSignerAddressFromSet is a free data retrieval call binding the contract method 0x5d180adb.
//
// Solidity: function validatorSignerAddressFromSet(uint256 index, uint256 blockNumber) constant returns(address)
func (_StableToken *StableTokenCaller) ValidatorSignerAddressFromSet(opts *bind.CallOpts, index *big.Int, blockNumber *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "validatorSignerAddressFromSet", index, blockNumber)
	return *ret0, err
}

// ValidatorSignerAddressFromSet is a free data retrieval call binding the contract method 0x5d180adb.
//
// Solidity: function validatorSignerAddressFromSet(uint256 index, uint256 blockNumber) constant returns(address)
func (_StableToken *StableTokenSession) ValidatorSignerAddressFromSet(index *big.Int, blockNumber *big.Int) (common.Address, error) {
	return _StableToken.Contract.ValidatorSignerAddressFromSet(&_StableToken.CallOpts, index, blockNumber)
}

// ValidatorSignerAddressFromSet is a free data retrieval call binding the contract method 0x5d180adb.
//
// Solidity: function validatorSignerAddressFromSet(uint256 index, uint256 blockNumber) constant returns(address)
func (_StableToken *StableTokenCallerSession) ValidatorSignerAddressFromSet(index *big.Int, blockNumber *big.Int) (common.Address, error) {
	return _StableToken.Contract.ValidatorSignerAddressFromSet(&_StableToken.CallOpts, index, blockNumber)
}

// ValueToUnits is a free data retrieval call binding the contract method 0x12c6c099.
//
// Solidity: function valueToUnits(uint256 value) constant returns(uint256)
func (_StableToken *StableTokenCaller) ValueToUnits(opts *bind.CallOpts, value *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _StableToken.contract.Call(opts, out, "valueToUnits", value)
	return *ret0, err
}

// ValueToUnits is a free data retrieval call binding the contract method 0x12c6c099.
//
// Solidity: function valueToUnits(uint256 value) constant returns(uint256)
func (_StableToken *StableTokenSession) ValueToUnits(value *big.Int) (*big.Int, error) {
	return _StableToken.Contract.ValueToUnits(&_StableToken.CallOpts, value)
}

// ValueToUnits is a free data retrieval call binding the contract method 0x12c6c099.
//
// Solidity: function valueToUnits(uint256 value) constant returns(uint256)
func (_StableToken *StableTokenCallerSession) ValueToUnits(value *big.Int) (*big.Int, error) {
	return _StableToken.Contract.ValueToUnits(&_StableToken.CallOpts, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) Approve(opts *bind.TransactOpts, spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "approve", spender, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenSession) Approve(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Approve(&_StableToken.TransactOpts, spender, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) Approve(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Approve(&_StableToken.TransactOpts, spender, value)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) Burn(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "burn", value)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 value) returns(bool)
func (_StableToken *StableTokenSession) Burn(value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Burn(&_StableToken.TransactOpts, value)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) Burn(value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Burn(&_StableToken.TransactOpts, value)
}

// CreditGasFees is a paid mutator transaction binding the contract method 0x6a30b253.
//
// Solidity: function creditGasFees(address from, address feeRecipient, address gatewayFeeRecipient, address communityFund, uint256 refund, uint256 tipTxFee, uint256 gatewayFee, uint256 baseTxFee) returns()
func (_StableToken *StableTokenTransactor) CreditGasFees(opts *bind.TransactOpts, from common.Address, feeRecipient common.Address, gatewayFeeRecipient common.Address, communityFund common.Address, refund *big.Int, tipTxFee *big.Int, gatewayFee *big.Int, baseTxFee *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "creditGasFees", from, feeRecipient, gatewayFeeRecipient, communityFund, refund, tipTxFee, gatewayFee, baseTxFee)
}

// CreditGasFees is a paid mutator transaction binding the contract method 0x6a30b253.
//
// Solidity: function creditGasFees(address from, address feeRecipient, address gatewayFeeRecipient, address communityFund, uint256 refund, uint256 tipTxFee, uint256 gatewayFee, uint256 baseTxFee) returns()
func (_StableToken *StableTokenSession) CreditGasFees(from common.Address, feeRecipient common.Address, gatewayFeeRecipient common.Address, communityFund common.Address, refund *big.Int, tipTxFee *big.Int, gatewayFee *big.Int, baseTxFee *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.CreditGasFees(&_StableToken.TransactOpts, from, feeRecipient, gatewayFeeRecipient, communityFund, refund, tipTxFee, gatewayFee, baseTxFee)
}

// CreditGasFees is a paid mutator transaction binding the contract method 0x6a30b253.
//
// Solidity: function creditGasFees(address from, address feeRecipient, address gatewayFeeRecipient, address communityFund, uint256 refund, uint256 tipTxFee, uint256 gatewayFee, uint256 baseTxFee) returns()
func (_StableToken *StableTokenTransactorSession) CreditGasFees(from common.Address, feeRecipient common.Address, gatewayFeeRecipient common.Address, communityFund common.Address, refund *big.Int, tipTxFee *big.Int, gatewayFee *big.Int, baseTxFee *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.CreditGasFees(&_StableToken.TransactOpts, from, feeRecipient, gatewayFeeRecipient, communityFund, refund, tipTxFee, gatewayFee, baseTxFee)
}

// DebitGasFees is a paid mutator transaction binding the contract method 0x58cf9672.
//
// Solidity: function debitGasFees(address from, uint256 value) returns()
func (_StableToken *StableTokenTransactor) DebitGasFees(opts *bind.TransactOpts, from common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "debitGasFees", from, value)
}

// DebitGasFees is a paid mutator transaction binding the contract method 0x58cf9672.
//
// Solidity: function debitGasFees(address from, uint256 value) returns()
func (_StableToken *StableTokenSession) DebitGasFees(from common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.DebitGasFees(&_StableToken.TransactOpts, from, value)
}

// DebitGasFees is a paid mutator transaction binding the contract method 0x58cf9672.
//
// Solidity: function debitGasFees(address from, uint256 value) returns()
func (_StableToken *StableTokenTransactorSession) DebitGasFees(from common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.DebitGasFees(&_StableToken.TransactOpts, from, value)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "decreaseAllowance", spender, value)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenSession) DecreaseAllowance(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.DecreaseAllowance(&_StableToken.TransactOpts, spender, value)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) DecreaseAllowance(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.DecreaseAllowance(&_StableToken.TransactOpts, spender, value)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "increaseAllowance", spender, value)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenSession) IncreaseAllowance(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.IncreaseAllowance(&_StableToken.TransactOpts, spender, value)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(address spender, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) IncreaseAllowance(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.IncreaseAllowance(&_StableToken.TransactOpts, spender, value)
}

// Initialize is a paid mutator transaction binding the contract method 0x82b93516.
//
// Solidity: function initialize(string _name, string _symbol, uint8 _decimals, address registryAddress, uint256 inflationRate, uint256 inflationFactorUpdatePeriod, address[] initialBalanceAddresses, uint256[] initialBalanceValues) returns()
func (_StableToken *StableTokenTransactor) Initialize(opts *bind.TransactOpts, _name string, _symbol string, _decimals uint8, registryAddress common.Address, inflationRate *big.Int, inflationFactorUpdatePeriod *big.Int, initialBalanceAddresses []common.Address, initialBalanceValues []*big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "initialize", _name, _symbol, _decimals, registryAddress, inflationRate, inflationFactorUpdatePeriod, initialBalanceAddresses, initialBalanceValues)
}

// Initialize is a paid mutator transaction binding the contract method 0x82b93516.
//
// Solidity: function initialize(string _name, string _symbol, uint8 _decimals, address registryAddress, uint256 inflationRate, uint256 inflationFactorUpdatePeriod, address[] initialBalanceAddresses, uint256[] initialBalanceValues) returns()
func (_StableToken *StableTokenSession) Initialize(_name string, _symbol string, _decimals uint8, registryAddress common.Address, inflationRate *big.Int, inflationFactorUpdatePeriod *big.Int, initialBalanceAddresses []common.Address, initialBalanceValues []*big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Initialize(&_StableToken.TransactOpts, _name, _symbol, _decimals, registryAddress, inflationRate, inflationFactorUpdatePeriod, initialBalanceAddresses, initialBalanceValues)
}

// Initialize is a paid mutator transaction binding the contract method 0x82b93516.
//
// Solidity: function initialize(string _name, string _symbol, uint8 _decimals, address registryAddress, uint256 inflationRate, uint256 inflationFactorUpdatePeriod, address[] initialBalanceAddresses, uint256[] initialBalanceValues) returns()
func (_StableToken *StableTokenTransactorSession) Initialize(_name string, _symbol string, _decimals uint8, registryAddress common.Address, inflationRate *big.Int, inflationFactorUpdatePeriod *big.Int, initialBalanceAddresses []common.Address, initialBalanceValues []*big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Initialize(&_StableToken.TransactOpts, _name, _symbol, _decimals, registryAddress, inflationRate, inflationFactorUpdatePeriod, initialBalanceAddresses, initialBalanceValues)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) Mint(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "mint", to, value)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns(bool)
func (_StableToken *StableTokenSession) Mint(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Mint(&_StableToken.TransactOpts, to, value)
}

// Mint is a paid mutator transaction binding the contract method 0x40c10f19.
//
// Solidity: function mint(address to, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) Mint(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Mint(&_StableToken.TransactOpts, to, value)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_StableToken *StableTokenTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_StableToken *StableTokenSession) RenounceOwnership() (*types.Transaction, error) {
	return _StableToken.Contract.RenounceOwnership(&_StableToken.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_StableToken *StableTokenTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _StableToken.Contract.RenounceOwnership(&_StableToken.TransactOpts)
}

// SetInflationParameters is a paid mutator transaction binding the contract method 0x222836ad.
//
// Solidity: function setInflationParameters(uint256 rate, uint256 updatePeriod) returns()
func (_StableToken *StableTokenTransactor) SetInflationParameters(opts *bind.TransactOpts, rate *big.Int, updatePeriod *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "setInflationParameters", rate, updatePeriod)
}

// SetInflationParameters is a paid mutator transaction binding the contract method 0x222836ad.
//
// Solidity: function setInflationParameters(uint256 rate, uint256 updatePeriod) returns()
func (_StableToken *StableTokenSession) SetInflationParameters(rate *big.Int, updatePeriod *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.SetInflationParameters(&_StableToken.TransactOpts, rate, updatePeriod)
}

// SetInflationParameters is a paid mutator transaction binding the contract method 0x222836ad.
//
// Solidity: function setInflationParameters(uint256 rate, uint256 updatePeriod) returns()
func (_StableToken *StableTokenTransactorSession) SetInflationParameters(rate *big.Int, updatePeriod *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.SetInflationParameters(&_StableToken.TransactOpts, rate, updatePeriod)
}

// SetRegistry is a paid mutator transaction binding the contract method 0xa91ee0dc.
//
// Solidity: function setRegistry(address registryAddress) returns()
func (_StableToken *StableTokenTransactor) SetRegistry(opts *bind.TransactOpts, registryAddress common.Address) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "setRegistry", registryAddress)
}

// SetRegistry is a paid mutator transaction binding the contract method 0xa91ee0dc.
//
// Solidity: function setRegistry(address registryAddress) returns()
func (_StableToken *StableTokenSession) SetRegistry(registryAddress common.Address) (*types.Transaction, error) {
	return _StableToken.Contract.SetRegistry(&_StableToken.TransactOpts, registryAddress)
}

// SetRegistry is a paid mutator transaction binding the contract method 0xa91ee0dc.
//
// Solidity: function setRegistry(address registryAddress) returns()
func (_StableToken *StableTokenTransactorSession) SetRegistry(registryAddress common.Address) (*types.Transaction, error) {
	return _StableToken.Contract.SetRegistry(&_StableToken.TransactOpts, registryAddress)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) Transfer(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "transfer", to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 value) returns(bool)
func (_StableToken *StableTokenSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Transfer(&_StableToken.TransactOpts, to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.Transfer(&_StableToken.TransactOpts, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "transferFrom", from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 value) returns(bool)
func (_StableToken *StableTokenSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.TransferFrom(&_StableToken.TransactOpts, from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 value) returns(bool)
func (_StableToken *StableTokenTransactorSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _StableToken.Contract.TransferFrom(&_StableToken.TransactOpts, from, to, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_StableToken *StableTokenTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_StableToken *StableTokenSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _StableToken.Contract.TransferOwnership(&_StableToken.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_StableToken *StableTokenTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _StableToken.Contract.TransferOwnership(&_StableToken.TransactOpts, newOwner)
}

// TransferWithComment is a paid mutator transaction binding the contract method 0xe1d6aceb.
//
// Solidity: function transferWithComment(address to, uint256 value, string comment) returns(bool)
func (_StableToken *StableTokenTransactor) TransferWithComment(opts *bind.TransactOpts, to common.Address, value *big.Int, comment string) (*types.Transaction, error) {
	return _StableToken.contract.Transact(opts, "transferWithComment", to, value, comment)
}

// TransferWithComment is a paid mutator transaction binding the contract method 0xe1d6aceb.
//
// Solidity: function transferWithComment(address to, uint256 value, string comment) returns(bool)
func (_StableToken *StableTokenSession) TransferWithComment(to common.Address, value *big.Int, comment string) (*types.Transaction, error) {
	return _StableToken.Contract.TransferWithComment(&_StableToken.TransactOpts, to, value, comment)
}

// TransferWithComment is a paid mutator transaction binding the contract method 0xe1d6aceb.
//
// Solidity: function transferWithComment(address to, uint256 value, string comment) returns(bool)
func (_StableToken *StableTokenTransactorSession) TransferWithComment(to common.Address, value *big.Int, comment string) (*types.Transaction, error) {
	return _StableToken.Contract.TransferWithComment(&_StableToken.TransactOpts, to, value, comment)
}

// StableTokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the StableToken contract.
type StableTokenApprovalIterator struct {
	Event *StableTokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenApproval represents a Approval event raised by the StableToken contract.
type StableTokenApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_StableToken *StableTokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*StableTokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &StableTokenApprovalIterator{contract: _StableToken.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_StableToken *StableTokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *StableTokenApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenApproval)
				if err := _StableToken.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_StableToken *StableTokenFilterer) ParseApproval(log types.Log) (*StableTokenApproval, error) {
	event := new(StableTokenApproval)
	if err := _StableToken.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	return event, nil
}

// StableTokenInflationFactorUpdatedIterator is returned from FilterInflationFactorUpdated and is used to iterate over the raw logs and unpacked data for InflationFactorUpdated events raised by the StableToken contract.
type StableTokenInflationFactorUpdatedIterator struct {
	Event *StableTokenInflationFactorUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenInflationFactorUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenInflationFactorUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenInflationFactorUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenInflationFactorUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenInflationFactorUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenInflationFactorUpdated represents a InflationFactorUpdated event raised by the StableToken contract.
type StableTokenInflationFactorUpdated struct {
	Factor      *big.Int
	LastUpdated *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterInflationFactorUpdated is a free log retrieval operation binding the contract event 0x08f3ed03ec9e579d1f6ab2f9e0d3dc661704696deabe37a6b6df7014f1b30a97.
//
// Solidity: event InflationFactorUpdated(uint256 factor, uint256 lastUpdated)
func (_StableToken *StableTokenFilterer) FilterInflationFactorUpdated(opts *bind.FilterOpts) (*StableTokenInflationFactorUpdatedIterator, error) {

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "InflationFactorUpdated")
	if err != nil {
		return nil, err
	}
	return &StableTokenInflationFactorUpdatedIterator{contract: _StableToken.contract, event: "InflationFactorUpdated", logs: logs, sub: sub}, nil
}

// WatchInflationFactorUpdated is a free log subscription operation binding the contract event 0x08f3ed03ec9e579d1f6ab2f9e0d3dc661704696deabe37a6b6df7014f1b30a97.
//
// Solidity: event InflationFactorUpdated(uint256 factor, uint256 lastUpdated)
func (_StableToken *StableTokenFilterer) WatchInflationFactorUpdated(opts *bind.WatchOpts, sink chan<- *StableTokenInflationFactorUpdated) (event.Subscription, error) {

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "InflationFactorUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenInflationFactorUpdated)
				if err := _StableToken.contract.UnpackLog(event, "InflationFactorUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInflationFactorUpdated is a log parse operation binding the contract event 0x08f3ed03ec9e579d1f6ab2f9e0d3dc661704696deabe37a6b6df7014f1b30a97.
//
// Solidity: event InflationFactorUpdated(uint256 factor, uint256 lastUpdated)
func (_StableToken *StableTokenFilterer) ParseInflationFactorUpdated(log types.Log) (*StableTokenInflationFactorUpdated, error) {
	event := new(StableTokenInflationFactorUpdated)
	if err := _StableToken.contract.UnpackLog(event, "InflationFactorUpdated", log); err != nil {
		return nil, err
	}
	return event, nil
}

// StableTokenInflationParametersUpdatedIterator is returned from FilterInflationParametersUpdated and is used to iterate over the raw logs and unpacked data for InflationParametersUpdated events raised by the StableToken contract.
type StableTokenInflationParametersUpdatedIterator struct {
	Event *StableTokenInflationParametersUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenInflationParametersUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenInflationParametersUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenInflationParametersUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenInflationParametersUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenInflationParametersUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenInflationParametersUpdated represents a InflationParametersUpdated event raised by the StableToken contract.
type StableTokenInflationParametersUpdated struct {
	Rate         *big.Int
	UpdatePeriod *big.Int
	LastUpdated  *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterInflationParametersUpdated is a free log retrieval operation binding the contract event 0xa0035d6667ffb7d387c86c7228141c4a877e8ed831b267ac928a2f5b651c155d.
//
// Solidity: event InflationParametersUpdated(uint256 rate, uint256 updatePeriod, uint256 lastUpdated)
func (_StableToken *StableTokenFilterer) FilterInflationParametersUpdated(opts *bind.FilterOpts) (*StableTokenInflationParametersUpdatedIterator, error) {

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "InflationParametersUpdated")
	if err != nil {
		return nil, err
	}
	return &StableTokenInflationParametersUpdatedIterator{contract: _StableToken.contract, event: "InflationParametersUpdated", logs: logs, sub: sub}, nil
}

// WatchInflationParametersUpdated is a free log subscription operation binding the contract event 0xa0035d6667ffb7d387c86c7228141c4a877e8ed831b267ac928a2f5b651c155d.
//
// Solidity: event InflationParametersUpdated(uint256 rate, uint256 updatePeriod, uint256 lastUpdated)
func (_StableToken *StableTokenFilterer) WatchInflationParametersUpdated(opts *bind.WatchOpts, sink chan<- *StableTokenInflationParametersUpdated) (event.Subscription, error) {

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "InflationParametersUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenInflationParametersUpdated)
				if err := _StableToken.contract.UnpackLog(event, "InflationParametersUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInflationParametersUpdated is a log parse operation binding the contract event 0xa0035d6667ffb7d387c86c7228141c4a877e8ed831b267ac928a2f5b651c155d.
//
// Solidity: event InflationParametersUpdated(uint256 rate, uint256 updatePeriod, uint256 lastUpdated)
func (_StableToken *StableTokenFilterer) ParseInflationParametersUpdated(log types.Log) (*StableTokenInflationParametersUpdated, error) {
	event := new(StableTokenInflationParametersUpdated)
	if err := _StableToken.contract.UnpackLog(event, "InflationParametersUpdated", log); err != nil {
		return nil, err
	}
	return event, nil
}

// StableTokenOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the StableToken contract.
type StableTokenOwnershipTransferredIterator struct {
	Event *StableTokenOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenOwnershipTransferred represents a OwnershipTransferred event raised by the StableToken contract.
type StableTokenOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_StableToken *StableTokenFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*StableTokenOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &StableTokenOwnershipTransferredIterator{contract: _StableToken.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_StableToken *StableTokenFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *StableTokenOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenOwnershipTransferred)
				if err := _StableToken.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_StableToken *StableTokenFilterer) ParseOwnershipTransferred(log types.Log) (*StableTokenOwnershipTransferred, error) {
	event := new(StableTokenOwnershipTransferred)
	if err := _StableToken.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	return event, nil
}

// StableTokenRegistrySetIterator is returned from FilterRegistrySet and is used to iterate over the raw logs and unpacked data for RegistrySet events raised by the StableToken contract.
type StableTokenRegistrySetIterator struct {
	Event *StableTokenRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenRegistrySet represents a RegistrySet event raised by the StableToken contract.
type StableTokenRegistrySet struct {
	RegistryAddress common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterRegistrySet is a free log retrieval operation binding the contract event 0x27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b.
//
// Solidity: event RegistrySet(address indexed registryAddress)
func (_StableToken *StableTokenFilterer) FilterRegistrySet(opts *bind.FilterOpts, registryAddress []common.Address) (*StableTokenRegistrySetIterator, error) {

	var registryAddressRule []interface{}
	for _, registryAddressItem := range registryAddress {
		registryAddressRule = append(registryAddressRule, registryAddressItem)
	}

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "RegistrySet", registryAddressRule)
	if err != nil {
		return nil, err
	}
	return &StableTokenRegistrySetIterator{contract: _StableToken.contract, event: "RegistrySet", logs: logs, sub: sub}, nil
}

// WatchRegistrySet is a free log subscription operation binding the contract event 0x27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b.
//
// Solidity: event RegistrySet(address indexed registryAddress)
func (_StableToken *StableTokenFilterer) WatchRegistrySet(opts *bind.WatchOpts, sink chan<- *StableTokenRegistrySet, registryAddress []common.Address) (event.Subscription, error) {

	var registryAddressRule []interface{}
	for _, registryAddressItem := range registryAddress {
		registryAddressRule = append(registryAddressRule, registryAddressItem)
	}

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "RegistrySet", registryAddressRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenRegistrySet)
				if err := _StableToken.contract.UnpackLog(event, "RegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRegistrySet is a log parse operation binding the contract event 0x27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b.
//
// Solidity: event RegistrySet(address indexed registryAddress)
func (_StableToken *StableTokenFilterer) ParseRegistrySet(log types.Log) (*StableTokenRegistrySet, error) {
	event := new(StableTokenRegistrySet)
	if err := _StableToken.contract.UnpackLog(event, "RegistrySet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// StableTokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the StableToken contract.
type StableTokenTransferIterator struct {
	Event *StableTokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenTransfer represents a Transfer event raised by the StableToken contract.
type StableTokenTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_StableToken *StableTokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*StableTokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &StableTokenTransferIterator{contract: _StableToken.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_StableToken *StableTokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *StableTokenTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenTransfer)
				if err := _StableToken.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_StableToken *StableTokenFilterer) ParseTransfer(log types.Log) (*StableTokenTransfer, error) {
	event := new(StableTokenTransfer)
	if err := _StableToken.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	return event, nil
}

// StableTokenTransferCommentIterator is returned from FilterTransferComment and is used to iterate over the raw logs and unpacked data for TransferComment events raised by the StableToken contract.
type StableTokenTransferCommentIterator struct {
	Event *StableTokenTransferComment // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *StableTokenTransferCommentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(StableTokenTransferComment)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(StableTokenTransferComment)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *StableTokenTransferCommentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *StableTokenTransferCommentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// StableTokenTransferComment represents a TransferComment event raised by the StableToken contract.
type StableTokenTransferComment struct {
	Comment string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTransferComment is a free log retrieval operation binding the contract event 0xe5d4e30fb8364e57bc4d662a07d0cf36f4c34552004c4c3624620a2c1d1c03dc.
//
// Solidity: event TransferComment(string comment)
func (_StableToken *StableTokenFilterer) FilterTransferComment(opts *bind.FilterOpts) (*StableTokenTransferCommentIterator, error) {

	logs, sub, err := _StableToken.contract.FilterLogs(opts, "TransferComment")
	if err != nil {
		return nil, err
	}
	return &StableTokenTransferCommentIterator{contract: _StableToken.contract, event: "TransferComment", logs: logs, sub: sub}, nil
}

// WatchTransferComment is a free log subscription operation binding the contract event 0xe5d4e30fb8364e57bc4d662a07d0cf36f4c34552004c4c3624620a2c1d1c03dc.
//
// Solidity: event TransferComment(string comment)
func (_StableToken *StableTokenFilterer) WatchTransferComment(opts *bind.WatchOpts, sink chan<- *StableTokenTransferComment) (event.Subscription, error) {

	logs, sub, err := _StableToken.contract.WatchLogs(opts, "TransferComment")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(StableTokenTransferComment)
				if err := _StableToken.contract.UnpackLog(event, "TransferComment", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransferComment is a log parse operation binding the contract event 0xe5d4e30fb8364e57bc4d662a07d0cf36f4c34552004c4c3624620a2c1d1c03dc.
//
// Solidity: event TransferComment(string comment)
func (_StableToken *StableTokenFilterer) ParseTransferComment(log types.Log) (*StableTokenTransferComment, error) {
	event := new(StableTokenTransferComment)
	if err := _StableToken.contract.UnpackLog(event, "TransferComment", log); err != nil {
		return nil, err
	}
	return event, nil
}
